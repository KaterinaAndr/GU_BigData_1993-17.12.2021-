"""
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
 который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин,
расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31    32         3    5    32        3    5    8    3
37    43         2    4    6         8    3    7    1
51    86        -1   64   -8
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов
 класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""

class Matrix:
    def __init__(self, x11, x12, x13, x21, x22, x23, x31, x32, x33):
        self.x11, self.x12, self.x13 = x11, x12, x13
        self.x21, self.x22, self.x23 = x21, x22, x23
        self.x31, self.x32, self.x33 = x31, x32, x33
        self.matrix_3x3 = [[x11, x12, x13], [x21, x22, x23], [x31, x32, x33]]

    def __str__(self):
        return f"{self.x11}   {self.x12}   {self.x13}\n" \
               f"{self.x21}   {self.x22}   {self.x23}\n" \
               f"{self.x31}   {self.x32}   {self.x33}"

    def __add__(self, other):
        return Matrix(self.x11 + other.x11, self.x12 + other.x12, self.x13 + other.x13,
                      self.x21 + other.x21, self.x22 + other.x22, self.x23 + other.x23,
                      self.x31 + other.x31, self.x32 + other.x32, self.x33 + other.x33)




a = Matrix(1, 2, 3, 4, 5, 6, 7, 8, 9)
print(a)
print()
b = Matrix(9, 8, 7, 6, 5, 4, 3, 2, 1)
c = a + b
print(c)